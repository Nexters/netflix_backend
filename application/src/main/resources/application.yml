spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/newtestdb2?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    username: root
    password: rootpassword
    dbcp2:
      time-between-eviction-runs-millis: 60000 #이건 뺄 수도 있을듯

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true

    show-sql: true

app:
  jwtSecret: JWTSuperSecretKey
  jwtExpirationInMs: 604800000


#spring:
#  datasource:
#    url: jdbc:mysql://localhost:3306/spring_social?useSSL=false
#    username: root
#    password: example
#
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#      naming:
#        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
#        #       todo: pyhsical-startegy가 필요한 지 다시 살펴볼 필요 있음. 필요 없을거같긴함.
##    todo: properties 잘 된건지 확인
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#
#  security:
#    oauth2:
#      client:
#        registration:
#          faceboook:
#            clientId: 121189305185277
#            clientSecret: 42ffe5aa7379e8326387e0fe16f34132
#            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
#            scope:
#              - email
#              - public_profile
#        provider:
#          FACEBOOK:
#            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
#            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
#            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
#
## 이게 왜 인식이 안되는지...?
#app:
#  auth:
#    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
#    tokenExpirationMsec: 864000000
#  oauth2:
#    # After successfully authenticating with the OAuth2 Provider,
#    # we'll be generating an auth token for the user and sending the token to the
#    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
#    # We're not using cookies because they won't work well in mobile clients.
#    authorizedRedirectUris:
#    - http://localhost:3000/oauth2/redirect
#    - myandroidapp://oauth2/redirect
#    - myiosapp://oauth2/redirect
#
#
#